from django.db import models
from django.urls import reverse_lazy, reverse
from django.core.mail import send_mail
from django.conf import settings
from django.utils.translation import gettext_lazy as _


class Post(models.Model):
    """–ë–ª–æ–≥-–ø–æ—Å—Ç:
    - title, content, preview
    - author (–¥–ª—è –ø—Ä–∞–≤ –∏ –ø–æ–¥–ø–∏—Å–∏)
    - is_published (–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ)
    - views_count (—Å—á—ë—Ç—á–∏–∫)
    –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""

    title = models.CharField(_("–ó–∞–≥–æ–ª–æ–≤–æ–∫"), max_length=200)
    content = models.TextField(_("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ"))

    # üëá –¥–æ–±–∞–≤–∏–ª–∏ –∞–≤—Ç–æ—Ä–∞ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å AUTH_USER_MODEL)
    author = models.ForeignKey(
        settings.AUTH_USER_MODEL,
        on_delete=models.CASCADE,
        verbose_name=_("–ê–≤—Ç–æ—Ä"),
        related_name="posts",
        null=True,  # ‚Üê –≤—Ä–µ–º–µ–Ω–Ω–æ, —á—Ç–æ–±—ã –Ω–µ —É–ø–∞—Å—Ç—å –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        blank=True,
    )

    preview = models.ImageField(
        _("–ü—Ä–µ–≤—å—é (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)"),
        upload_to="blog_previews/",
        blank=True,
        null=True,
        help_text=_("–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ—Å—Ç–æ–≤."),
    )

    created_at = models.DateTimeField(_("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"), auto_now_add=True)

    # üëá –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É–±–ª–∏–∫—É–µ–º, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ –Ω–µ –±—ã–ª –ø—É—Å—Ç
    is_published = models.BooleanField(_("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω"), default=True)

    views_count = models.PositiveIntegerField(_("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"), default=0)

    class Meta:
        verbose_name = _("–ë–ª–æ–≥–æ–≤–∞—è –∑–∞–ø–∏—Å—å")
        verbose_name_plural = _("–ë–ª–æ–≥–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏")
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["-created_at"]),
            models.Index(fields=["is_published"]),
        ]

    def __str__(self):
        return self.title

    def get_absolute_url(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —ç—Ç–æ–π —Å—Ç–∞—Ç—å–∏."""
        return reverse("blog:post_detail", kwargs={"pk": self.pk})

    def save(self, *args, **kwargs):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ—Ä–æ–≥–∞ 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤."""
        send_congrats = False
        if self.pk:
            old = Post.objects.only("views_count").filter(pk=self.pk).first()
            if old and old.views_count < 100 <= self.views_count:
                send_congrats = True

        super().save(*args, **kwargs)

        if send_congrats:
            try:
                send_mail(
                    subject="üéâ –ü–æ—Å—Ç –Ω–∞–±—Ä–∞–ª 100+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                    message=(
                        f"–ü–æ—Å—Ç ¬´{self.title}¬ª –¥–æ—Å—Ç–∏–≥ {self.views_count} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤.\n"
                        "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!"
                    ),
                    from_email=settings.DEFAULT_FROM_EMAIL,
                    recipient_list=[settings.ADMIN_EMAIL],
                    fail_silently=False,
                )
            except Exception:
                # —É–º—ã—à–ª–µ–Ω–Ω–æ –Ω–µ —Ä–æ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
                pass


# –±–µ–∑ –¥–æ–ø –∑–∞–¥–∞–Ω–∏—è
# class Post(models.Model):
#     """–ú–æ–¥–µ–ª—å –±–ª–æ–≥–æ–≤–æ–π –∑–∞–ø–∏—Å–∏."""
#
#     title = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
#     content = models.TextField(verbose_name="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ")
#     preview = models.ImageField(upload_to="blog_previews/", blank=True, null=True, verbose_name="–ü—Ä–µ–≤—å—é")
#     created_at = models.DateTimeField(auto_now_add=True, verbose_name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è")
#     is_published = models.BooleanField(default=True, verbose_name="–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ")
#     views_count = models.PositiveIntegerField(default=0, verbose_name="–ü—Ä–æ—Å–º–æ—Ç—Ä—ã")
#
#     class Meta:
#         verbose_name = "–ü–æ—Å—Ç"
#         verbose_name_plural = "–ü–æ—Å—Ç—ã"
#         ordering = ["-created_at"]
#
#     def __str__(self):
#         return self.title
