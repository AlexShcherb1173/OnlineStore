from django.contrib import messages
from django.contrib.auth.mixins import LoginRequiredMixin, UserPassesTestMixin
from django.urls import reverse_lazy, reverse
from django.views.generic import (
    ListView,
    DetailView,
    CreateView,
    UpdateView,
    DeleteView,
    TemplateView,
)

from catalog.forms import ContactForm, ProductForm
from catalog.models import Product


class HomeView(ListView):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç ListView –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã —Å –ø–æ–¥–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (select_related) –∏
    —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏).
    –í —à–∞–±–ª–æ–Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã:
      - page_obj  ‚Äî –æ–±—ä–µ–∫—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Ü–∏–∫–ª–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫);
      - products  ‚Äî —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Å–∏–Ω–æ–Ω–∏–º object_list);
      - is_paginated, paginator ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã ListView.
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
      –†–∞–Ω—å—à–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞–∑—ã–≤–∞–ª—Å—è "page_obj" —á–µ—Ä–µ–∑ context_object_name ‚Äî —ç—Ç–æ –º–æ–≥–ª–æ
      ¬´–ø–µ—Ä–µ–∑–∞—Ç–∏—Ä–∞—Ç—å¬ª –Ω–∞—Å—Ç–æ—è—â–∏–π page_obj. –¢–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞–µ–º "products", –∞ page_obj
      –æ—Å—Ç–∞—ë—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º."""

    model = Product
    template_name = "catalog/home.html"
    context_object_name = "products"  # ‚úÖ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –¥–ª—è object_list
    paginate_by = 8
    ordering = ["-created_at"]

    def get_queryset(self):
        """–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π queryset ‚Äî –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–¥–Ω–∏–º JOIN."""
        return Product.objects.select_related("category").order_by("-created_at")

    def get_context_data(self, **kwargs):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Ç–æ–≤–∞—Ä–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏).
        –ù–∞ –≤—ã–≤–æ–¥ —ç—Ç–æ –Ω–µ –≤–ª–∏—è–µ—Ç."""
        context = super().get_context_data(**kwargs)
        latest_products = Product.objects.order_by("-created_at")[:5]
        print("üÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:")
        for p in latest_products:
            print(f"- {p.name} ({p.price} ‚ÇΩ)")
        return context


class ContactsView(TemplateView):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª —Å —Ñ–æ—Ä–º–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    GET: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—É—Å—Ç—É—é —Ñ–æ—Ä–º—É.
    POST: –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ,
          –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –æ—á–∏—â–∞–µ—Ç —Ñ–æ—Ä–º—É (–¥–µ–º–æ-–ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î)."""

    template_name = "catalog/contacts.html"

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context["form"] = ContactForm()
        context["success_message"] = None
        return context

    def post(self, request, *args, **kwargs):
        form = ContactForm(request.POST)
        success_message = None

        if form.is_valid():
            name = form.cleaned_data["name"]
            phone = form.cleaned_data["phone"]
            _message = form.cleaned_data[
                "message"
            ]  # –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥ –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É

            success_message = (
                f"‚úÖ –°–ø–∞—Å–∏–±–æ, {name}! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É {phone}."
            )
            form = ContactForm()  # –æ—á–∏—â–∞–µ–º –ø–æ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

        context = {"form": form, "success_message": success_message}
        return self.render_to_response(context)


class ProductDetailView(DetailView):
    """–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ pk –∏–∑ URL –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –µ–≥–æ –≤ —à–∞–±–ª–æ–Ω
    –ø–æ–¥ –∏–º–µ–Ω–µ–º "product"."""

    model = Product
    template_name = "catalog/product_detail.html"
    context_object_name = "product"


class AddProductView(CreateView):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç ProductForm c –∫–∞—Å—Ç–æ–º–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π (–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è name/description).
    –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞."""

    model = Product
    form_class = ProductForm
    template_name = "catalog/add_product.html"  # –º–æ–∂–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ "catalog/product_form.html"

    def form_valid(self, form):
        response = super().form_valid(form)
        messages.success(
            self.request, f"‚úÖ –¢–æ–≤–∞—Ä ¬´{self.object.name}¬ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!"
        )
        return response

    def form_invalid(self, form):
        messages.error(
            self.request, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."
        )
        return super().form_invalid(form)

    def get_success_url(self):
        return reverse("product_detail", kwargs={"pk": self.object.pk})


class StaffRequiredMixin(LoginRequiredMixin, UserPassesTestMixin):
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞:
    - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω,
    - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º (is_staff=True)."""

    def test_func(self):
        return self.request.user.is_staff


class ProductUpdateView(UpdateView):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞.
    - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç ProductForm (—Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤).
    - –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞.
    - –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤."""

    model = Product
    form_class = ProductForm
    template_name = "catalog/product_form.html"  # –µ–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω —Ñ–æ—Ä–º—ã –¥–ª—è create/update

    def form_valid(self, form):
        resp = super().form_valid(form)
        from django.contrib import messages

        messages.success(self.request, f"‚úÖ –¢–æ–≤–∞—Ä ¬´{self.object.name}¬ª –æ–±–Ω–æ–≤–ª—ë–Ω.")
        return resp

    def form_invalid(self, form):
        from django.contrib import messages

        messages.error(
            self.request, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."
        )
        return super().form_invalid(form)

    def get_success_url(self):
        return reverse("product_detail", kwargs={"pk": self.object.pk})


class ProductDeleteView(DeleteView):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —à–∞–±–ª–æ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    - –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è ‚Äî —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
    - –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤."""

    model = Product
    template_name = "catalog/product_confirm_delete.html"

    def get_success_url(self):
        from django.contrib import messages

        messages.success(self.request, f"üóë –¢–æ–≤–∞—Ä ¬´{self.object.name}¬ª —É–¥–∞–ª—ë–Ω.")
        return reverse("home")

