from django.contrib import messages
from django.contrib.auth import login, logout
from django.contrib.auth.mixins import LoginRequiredMixin
from django.core.mail import send_mail
from django.shortcuts import redirect
from django.urls import reverse_lazy, reverse
from django.views.generic import FormView, TemplateView
from django.conf import settings

from .forms import UserRegistrationForm, EmailAuthenticationForm


class RegisterView(FormView):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    - –ª–æ–≥–∏–Ω–∏—Ç,
    - —à–ª—ë—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ,
    - —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é.
    """
    template_name = "users/register.html"
    form_class = UserRegistrationForm
    success_url = reverse_lazy("home")

    def form_valid(self, form):
        user = form.save()
        login(self.request, user)

        # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ
        try:
            send_mail(
                subject="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SkyStore! üéâ",
                message=(
                    f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {getattr(user, 'email', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}!\n\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ SkyStore. –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å üòä"
                ),
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[user.email],
                fail_silently=False,
            )
        except Exception as e:
            # —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            messages.warning(self.request, f"–ü–∏—Å—å–º–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {e}")

        messages.success(self.request, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã")
        return super().form_valid(form)


class LoginView(FormView):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ email –∏ –ø–∞—Ä–æ–ª—é."""
    template_name = "users/login.html"
    form_class = EmailAuthenticationForm

    def form_valid(self, form):
        user = form.get_user()
        login(self.request, user)
        messages.success(self.request, "–í—ã –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç.")
        next_url = self.request.GET.get("next")
        return redirect(next_url or reverse("home"))


class LogoutView(LoginRequiredMixin, TemplateView):
    """–í—ã—Ö–æ–¥ —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é."""
    template_name = "users/logged_out.html"

    def dispatch(self, request, *args, **kwargs):
        logout(request)
        messages.info(request, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.")
        return redirect("home")
